% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reinforced.R
\name{modelPredict}
\alias{modelPredict}
\title{Risk prediction on the test set}
\usage{
modelPredict(list_fpcaFit, list_paraEst, Xtest, Ztest, startT, tau)
}
\arguments{
\item{list_fpcaFit}{Obtained FPCA decomposition from \code{modelFit}.}

\item{list_paraEst}{Obtained parameter estimates from \code{modelFit}.}

\item{Xtest}{Longitudinal biomarker data for subjects in the test set, matrix of \eqn{testn} by \eqn{nTotal}. Missing values
are denoted by NA.}

\item{Ztest}{Other baseline covariates for subjects in the test set.}

\item{startT}{Time of the first prediction, denoted by \eqn{t_1} in the manuscript. For instance, if the time grids are \eqn{{0,1/60,2/60,...,1}},
then startT = 25 means that the first prediction is made at \eqn{t = 24/60}.}

\item{tau}{The threshold value \eqn{\tau}.}
}
\value{
\item{final.label}{Predicted outcome \eqn{Y} for subjects in the test set, vector of length \eqn{testn}.}
\item{avg.cost}{Average cost when we applied this prediction procedure to the test set. }
\item{cost}{Cost for each subject, vector of length \eqn{testn}. For some subjects, we make a definite decision early. For others, we follow up with a long period of time. Hence the cost is different for each individual. }
}
\description{
For a fixed threshold value \eqn{\tau}, \code{modelPredict} predicts the outcome \eqn{Y}  for subjects in the test set.
This function also outputs the cost associated with the prediction procedure.
}
\examples{
library(reinforcedPred)
set.seed(1)

# take the example training data (univariate Z) from the reinforcedPred package
# see documentation for details about the data set train_data_uniZ
Y <- as.numeric(train_data_uniZ$Y)
tildeX.missing <- as.matrix(train_data_uniZ[,2:62])
Z <- as.numeric(train_data_uniZ$Z)

# analysis starts
budget <- 45
folds <- 5
startT <- 25
link <- "probit"

result <- reinforced(Y, tildeX.missing, Z, budget, folds, startT, link, pve = 0.99, nbasis = 10)

# obtained parameter estimates and FPCA decompositions
list_paraEst <- (result$final.result)$list_paraEst
list_fpcaFit <- (result$final.result)$list_fpcaFit

# optimal tau that minimizes the misclassification error under the budget constraint
final.tau <- result$final.tau
final.tau

# use the fitted model to predict the label Y for subjects in the test data
# see documentation for details about the data set test_data_uniZ
testY <- as.numeric(test_data_uniZ$testY)
test.tildeX.missing <- as.matrix(test_data_uniZ[,2:62])
test.Z <- as.numeric(test_data_uniZ$test.Z)

pred <- modelPredict(list_fpcaFit, list_paraEst, test.tildeX.missing, test.Z, startT, final.tau)

# predicted outcome Y for each subject in the test data
predY.test <- pred$final.label
# misclassification error
mis.error <- sum(predY.test != testY, na.rm = TRUE) / sum(!is.na(testY))
mis.error

# the average cost when we applied the prediction procedure to the test data
pred$avg.cost
}
